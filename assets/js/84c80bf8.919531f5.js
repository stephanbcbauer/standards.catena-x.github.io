"use strict";(self.webpackChunkcatenax_ng=self.webpackChunkcatenax_ng||[]).push([[3185],{3650:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=o(5893),n=o(1151);const a={title:"How to trigger a workflow in another repository"},s=void 0,i={id:"guides/how-to-cross-repo-workflow-dispatch",title:"How to trigger a workflow in another repository",description:"This how-to will guide you through requesting credentials to trigger an external workflow in another repository and provide example workflows.",source:"@site/docs/guides/how-to-cross-repo-workflow-dispatch.md",sourceDirName:"guides",slug:"/guides/how-to-cross-repo-workflow-dispatch",permalink:"/docs/guides/how-to-cross-repo-workflow-dispatch",draft:!1,unlisted:!1,editUrl:"https://github.com/catenax-ng/catenax-ng.github.io/edit/main/docs/guides/how-to-cross-repo-workflow-dispatch.md",tags:[],version:"current",frontMatter:{title:"How to trigger a workflow in another repository"},sidebar:"tutorialSidebar",previous:{title:"How To Create Documentation via GitHub Pages",permalink:"/docs/guides/how-to-create-doc-via-guthub-pages"},next:{title:"How to Access a Private Repo and a Private Package/Image",permalink:"/docs/guides/how-to-prepare-a-private-repo"}},c={},l=[{value:"Context",id:"context",level:2},{value:"Request credentials",id:"request-credentials",level:2},{value:"Sample code for the source repository workflow",id:"sample-code-for-the-source-repository-workflow",level:2},{value:"Sample code for the target repository workflow",id:"sample-code-for-the-target-repository-workflow",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"This how-to will guide you through requesting credentials to trigger an external workflow in another repository and provide example workflows."}),"\n",(0,r.jsx)(t.h2,{id:"context",children:"Context"}),"\n",(0,r.jsx)(t.p,{children:"This approach is used to provide a secure mean to use workflow dispatches without using a PAT. Only requirement is that the source and target repositories are in the same organization."}),"\n",(0,r.jsx)(t.h2,{id:"request-credentials",children:"Request credentials"}),"\n",(0,r.jsxs)(t.p,{children:["Request credentials via our ",(0,r.jsx)(t.a,{href:"https://jira.catena-x.net/secure/CreateIssueDetails!init.jspa?pid=10212&issuetype=10401&components=10401&priority=3&summary=Request%20credentials%20for%20workflow%20triggers&description=%0Aproduct%20name%3A%0Asource%20repositories%3A%0Atarget%20repositories%3A&labels=requirement-dependent",children:"support template"})]}),"\n",(0,r.jsx)(t.p,{children:"In the request you must define your source and target repositories (only your source repositories will be able to access the credentials)"}),"\n",(0,r.jsx)(t.h2,{id:"sample-code-for-the-source-repository-workflow",children:"Sample code for the source repository workflow"}),"\n",(0,r.jsx)(t.p,{children:"Once you received your credentials, integrate them into your GitHub actions. Some examples are posted below:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'steps:\n- name: Get Token\n  id: get_workflow_token\n  uses: peter-murray/workflow-application-token-action@v1\n  with:\n    application_id: ${{ secrets.YOUR_APPID }}\n    application_private_key: ${{ secrets.YOUR_DISPATCH_KEY }}      \n- name: trigger-workflow\n  id: call_action\n  env:\n    TOKEN: ${{ steps.get_workflow_token.outputs.token }}\n  run: |\n    curl -v \\\n      --request POST \\\n      --url https://api.github.com/repos/catenax-ng/playground-target/actions/workflows/example.yaml/dispatches \\\n      --header "authorization: Bearer $TOKEN" \\\n      --header "Accept: application/vnd.github.v3+json" \\\n      --data \'{"ref":"test_branch","inputs":{"any_data":"anything","any_data2":"anything2"}}\' \\\n      --fail\n'})}),"\n",(0,r.jsx)(t.h2,{id:"sample-code-for-the-target-repository-workflow",children:"Sample code for the target repository workflow"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'name: Demo\non: \n  workflow_dispatch:\n    inputs:\n    # any parameter used in calling workflow needs to be declared here\n    # setting required to false means it\'s an optional parameter\n      any_data:\n        description: "content here"\n        required: true\n        default: "no content"\n      any_data2:\n        description: "more data"\n        required: false\n        default: "no content"\njobs:\n  show_workspace:\n    runs-on: ubuntu-latest\n    steps:\n      - run: echo "event payload ${{ github.event.inputs.any_data }}"\n'})})]})}function p(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1151:(e,t,o)=>{o.d(t,{Z:()=>i,a:()=>s});var r=o(7294);const n={},a=r.createContext(n);function s(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);
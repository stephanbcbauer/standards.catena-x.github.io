"use strict";(self.webpackChunkcatenax_ng=self.webpackChunkcatenax_ng||[]).push([[7838],{6952:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var t=r(5893),a=r(1151);const i={title:"How to setup Hashicorp Vault"},s=void 0,o={id:"internal/how-to-setup-hashicorp-vault",title:"How to setup Hashicorp Vault",description:"This guide is only for those who operate the environment",source:"@site/docs/internal/how-to-setup-hashicorp-vault.md",sourceDirName:"internal",slug:"/internal/how-to-setup-hashicorp-vault",permalink:"/docs/internal/how-to-setup-hashicorp-vault",draft:!1,unlisted:!1,editUrl:"https://github.com/catenax-ng/catenax-ng.github.io/edit/main/docs/internal/how-to-setup-hashicorp-vault.md",tags:[],version:"current",frontMatter:{title:"How to setup Hashicorp Vault"},sidebar:"tutorialSidebar",previous:{title:"How to manage forked repositories from eclipse-tractusx",permalink:"/docs/internal/how-to-setup-forked-repo"},next:{title:"How To Use HashiCorp Vault",permalink:"/docs/internal/how-to-use-vault"}},l={},c=[{value:"Create an AKS cluster for vault",id:"create-an-aks-cluster-for-vault",level:2},{value:"Deploy Vault",id:"deploy-vault",level:2},{value:"Configure Vault",id:"configure-vault",level:2}];function u(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"This guide is only for those who operate the environment"})}),"\n",(0,t.jsx)(n.p,{children:"This how-to will guide you through the deployment and configuration of Hashicorp Vault"}),"\n",(0,t.jsx)(n.h2,{id:"create-an-aks-cluster-for-vault",children:"Create an AKS cluster for vault"}),"\n",(0,t.jsx)(n.p,{children:"main.tf contains resources that will be created, e.g."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'module "resource_group" {\r\n  source = "../modules/resource_group"\r\n\r\n  resource_group_name = var.environment_name\r\n}\r\n\r\nmodule "aks" {\r\n  source = "../modules/aks_cluster"\r\n\r\n  aks_cluster_name   = "cx-${var.environment_name}-aks"\r\n  aks_location       = module.resource_group.resource_location\r\n  aks_resource_group = module.resource_group.resource_group_name\r\n\r\n  aks_service_principal_client_id     = var.service_principal_client_id\r\n  aks_service_principal_client_secret = var.service_principal_client_secret\r\n  aks_dns_prefix                      = "cx-${var.environment_name}-aks"\r\n\r\n  k8s_vm_size = var.k8s_vm_size\r\n  k8s_cluster_node_count = var.k8s_cluster_node_count\r\n}\r\n\r\nmodule "public_ip" {\r\n  source = "../modules/public_ip"\r\n\r\n  public_ip_name      = "cx-${var.environment_name}-public-ip"\r\n  resource_location   = module.resource_group.resource_location\r\n  resource_group_name = module.aks.node_resource_group\r\n}\r\n\r\nmodule "a_record" {\r\n  source = "../modules/a_record"\r\n\r\n  record_name = "*.${var.environment_name}"\r\n  target_resource_id = module.public_ip.id\r\n  resource_group_name = "cxtsi-demo-shared-rg"\r\n  zone_name = "demo.catena-x.net"\r\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"variables.tf contains all parameters of the resources, e.g."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'variable "environment_name" {\r\n  description = "Name of the environment to create, i.e. \'core\'. Will be used in several resource names"\r\n  type        = string\r\n}\r\n\r\nvariable "service_principal_client_id" {\r\n  description = "USE TF_VAR_service_principal_client_id! The client ID of the service principal that will be used to create the AKS cluster."\r\n  type        = string\r\n}\r\n\r\nvariable "service_principal_client_secret" {\r\n  description = "USE TF_VAR_service_principal_client_secret! The secret of the service principal that will be used to create the AKS cluster."\r\n}\r\n\r\nvariable "k8s_vm_size" {\r\n  description = "The Azure VM Size string i.e. Standard_D2_v2 or Standard_D8s_v3"\r\n  type        = string\r\n  default     = "Standard_D8s_v3"\r\n}\r\n\r\nvariable "k8s_cluster_node_count" {\r\n  description = "The number of kubernetes nodes to create for the k8s cluster"\r\n  type        = number\r\n  default     = 3\r\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"environments/vault.tfvars contains variables that are specific to the environment, and override the ones in variables.tf"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'environment_name="vault"\r\nk8s_vm_size="Standard_B2s"\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://catenax-ng.github.io/docs/internal/how-to-setup-aks-cluster-via-terraform",children:"More information on AKS cluster creation"})}),"\n",(0,t.jsx)(n.h2,{id:"deploy-vault",children:"Deploy Vault"}),"\n",(0,t.jsx)(n.p,{children:"ArgoCD application"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"apiVersion: argoproj.io/v1alpha1\r\nkind: Application\r\nmetadata:\r\n  name: vault\r\n  namespace: argocd\r\n  labels:\r\n    environment: core\r\nspec:\r\n  project: default\r\n  source:\r\n    repoURL: 'https://github.com/catenax-ng/k8s-cluster-stack'\r\n    path: apps/vault\r\n    targetRevision: 'HEAD'\r\n    plugin:\r\n      name: argocd-vault-plugin-helm-args\r\n      env:\r\n        - name: AVP_SECRET\r\n          value: vault-secret\r\n        - name: helm_args\r\n          value: '-f values.yaml -f values-vault-vault.yaml'\r\n  destination:\r\n    namespace: vault\r\n    name: vault-cluster\r\n    server: ''\r\n  syncPolicy:\r\n    syncOptions:\r\n      - Validate=false\r\n      - CreateNamespace=true\r\n      - PrunePropagationPolicy=foreground\r\n      - PruneLast=true\r\n    retry:\r\n      limit: 5\r\n      backoff:\r\n        duration: 5s\r\n        factor: 2\r\n        maxDuration: 3m\r\n  ignoreDifferences: # https://github.com/argoproj/argo-cd/issues/4276#issuecomment-908455476\r\n    - group: admissionregistration.k8s.io\r\n      kind: MutatingWebhookConfiguration\r\n      jqPathExpressions:\r\n        - .webhooks[]?.clientConfig.caBundle\n"})}),"\n",(0,t.jsx)(n.p,{children:"Helm chart"}),"\n",(0,t.jsx)(n.p,{children:"Chart.yaml"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"apiVersion: v2\r\nname: vault\r\ndescription: Hashicorp vault\r\ntype: application\r\nversion: 0.0.2\r\nappVersion: 0.1\n"})}),"\n",(0,t.jsx)(n.p,{children:"values.yaml"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'domain: "demo.catena-x.net"\r\nvault:\r\n  server:\r\n    ha:\r\n      config: |\r\n        ui = true\r\n        listener "tcp" {\r\n          tls_disable = 1\r\n          address = "[::]:8200"\r\n          cluster_address = "[::]:8201"\r\n        }\r\n        storage "raft" {\r\n          path = "/vault/data"\r\n        }\r\n        service_registration "kubernetes" {}\r\n        disable_mlock = true\r\n      enabled: true\r\n      raft:\r\n        enabled: true\r\n        config: |\r\n          ui = true\r\n          listener "tcp" {\r\n            tls_disable = 1\r\n            address = "[::]:8200"\r\n            cluster_address = "[::]:8201"\r\n          }\r\n          storage "raft" {\r\n            path = "/vault/data"\r\n          }\r\n          service_registration "kubernetes" {}\r\n          disable_mlock = true\r\n    extraEnvironmentVars:\r\n      VAULT_SEAL_TYPE: "azurekeyvault"\r\n      VAULT_AZUREKEYVAULT_VAULT_NAME: "cx-vault-unseal"\r\n      VAULT_AZUREKEYVAULT_KEY_NAME: "hashicorp-vault-key"\r\n      AZURE_TENANT_ID: "<TENANT ID>"\r\n      AZURE_CLIENT_ID: "<CLIENT ID>"\r\n    extraSecretEnvironmentVars:\r\n      - envName: AZURE_CLIENT_SECRET\r\n        secretName: azure-vault-secret\r\n        secretKey: client-secret\r\n\n'})}),"\n",(0,t.jsx)(n.p,{children:"Initialization and first time unseal is manual action (for now)"}),"\n",(0,t.jsx)(n.p,{children:"Get the kube config of the vault cluster"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"az login --use-device-code --tenant <tenant_id>\r\naz account set <subscripition_id>\r\naz aks get-credentials --admin --resource-group cx-vault-rg --name cx-vault-aks-services --file $HOME/.kube/cx-vault-admin\n"})}),"\n",(0,t.jsx)(n.p,{children:"Initialize one of the vault instances and save the root token and unseal keys"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"kubectl --kubeconfig=.kube/cx-vault-admin -n vault exec pod/vault-0 -- /bin/sh vault operator init"})}),"\n",(0,t.jsx)(n.p,{children:"Login with the root token"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"kubectl --kubeconfig=.kube/cx-vault-admin -n vault exec pod/vault-0 -- /bin/sh vault login"})}),"\n",(0,t.jsx)(n.p,{children:"Unseal the first instance by running the following command three times"}),"\n",(0,t.jsx)(n.p,{children:"Each time provide a different unseal key out of the five that are generated during initialization"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"kubectl --kubeconfig=.kube/cx-vault-admin -n vault exec pod/vault-0 -- /bin/sh vault operator unseal"})}),"\n",(0,t.jsx)(n.p,{children:"Display the status of the first instance and note the internal url / ip address of the first node that will be the leader"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"kubectl --kubeconfig=.kube/cx-vault-admin -n vault exec pod/vault-0 -- /bin/sh vault status"})}),"\n",(0,t.jsx)(n.p,{children:"If the initialization and unseal were successful, you will see the following status"}),"\n",(0,t.jsxs)(n.p,{children:["...",(0,t.jsx)(n.br,{}),"\n","Initialized              true",(0,t.jsx)(n.br,{}),"\n","Sealed                   false",(0,t.jsx)(n.br,{}),"\n","..."]}),"\n",(0,t.jsx)(n.p,{children:"Join the other (two) instances as followers to the first instance"}),"\n",(0,t.jsx)(n.p,{children:"Provide the vault root token when prompted"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"kubectl --kubeconfig=.kube/cx-vault-admin -n vault exec pod/vault-1 -- /bin/sh vault login"})}),"\n",(0,t.jsx)(n.p,{children:"Join the first instance using its internal url or ip address"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"kubectl --kubeconfig=.kube/cx-vault-admin -n vault exec pod/vault-1 -- /bin/sh vault operator raft join http://vault-0.vault-internal:8200"})}),"\n",(0,t.jsx)(n.p,{children:"Check the status of the following instances"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"kubectl --kubeconfig=.kube/cx-vault-admin -n vault exec pod/vault-1 -- /bin/sh vault status"})}),"\n",(0,t.jsx)(n.p,{children:"In case sealed is true, then unseal them as well, again run the command three times providing three different unseal keys out of the five"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"kubectl --kubeconfig=.kube/cx-vault-admin -n vault exec pod/vault-1 -- /bin/sh vault operator unseal"})}),"\n",(0,t.jsx)(n.p,{children:"Once all instances have been unsealed, no further unseal will be necessary, as Azure keyvault will take care of it."}),"\n",(0,t.jsx)(n.h2,{id:"configure-vault",children:"Configure Vault"}),"\n",(0,t.jsx)(n.p,{children:"Clone GitHub repository k8s-cluster-stack"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"git clone https://github.com/catenax-ng/k8s-cluster-stack.git"})}),"\n",(0,t.jsx)(n.p,{children:"Get the approle ID and approle secret ID from Azure Keyvault cx-vault-unseal secrets using Azure CLI"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"az login --use-device-code --tenant <Tenant ID>\r\naz account set <Subscription ID>\r\naz keyvault secret show --vault-name cx-vault-unseal --name vault-approle-id | jq '.value'\r\naz keyvault secret show --vault-name cx-vault-unseal --name vault-approle-secret-id | jq '.value'\n"})}),"\n",(0,t.jsx)(n.p,{children:"Get the approle ID and approle secret ID from Azure Keyvault cx-vault-unseal secretsfrom the Azure portal"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://portal.azure.com/#@catenax.onmicrosoft.com/asset/Microsoft_Azure_KeyVault/Secret/https://cx-vault-unseal.vault.azure.net/secrets/vault-approle-id",children:"Approle ID"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://portal.azure.com/#@catenax.onmicrosoft.com/asset/Microsoft_Azure_KeyVault/Secret/https://cx-vault-unseal.vault.azure.net/secrets/vault-approle-secret-id",children:"Approle secret ID"})}),"\n",(0,t.jsx)(n.p,{children:"Configure Vault in Terraform code"}),"\n",(0,t.jsx)(n.p,{children:"main.tf"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'locals {\r\n  teams = [\r\n    "bpdm",\r\n    "catenax-at-home",\r\n    "dft",\r\n    "edc",\r\n    "esc-backbone",\r\n    "essential-services",\r\n    "integrity-demonstrator",\r\n    "managed-identity-wallets",\r\n    "material-pass",\r\n    "portal",\r\n    "semantics",\r\n    "team-example",\r\n    "test-data-generator",\r\n    "traceability-foss",\r\n    "traceability-irs"\r\n  ]\r\n}\r\n\r\n\r\nresource "vault_mount" "devsecops-secret-engine" {\r\n  path        = "devsecops"\r\n  type        = "kv-v2"\r\n  description = "Secret engine for DevSecOps team"\r\n}\r\n\r\nresource "vault_mount" "product-team-secret-engines" {\r\n\r\n  for_each = toset( local.teams )\r\n\r\n  path        = each.key\r\n  type        = "kv-v2"\r\n  description = "Secret engine for team ${each.key}"\r\n}\r\n\r\nresource "vault_policy" "product-team-policies" {\r\n\r\n  for_each = toset(local.teams)\r\n\r\n  name   = each.key\r\n  policy = <<EOT\r\npath "${each.key}/*" {\r\n  capabilities = [ "create", "read", "update", "delete", "list" ]\r\n}\r\nEOT\r\n}\r\n\r\nresource "vault_policy" "product-approle-read-only-policies" {\r\n\r\n  for_each = toset(local.teams)\r\n\r\n  name   = "${each.key}-ro"\r\n  policy = <<EOT\r\npath "${each.key}/*" {\r\n  capabilities = [ "read" ]\r\n}\r\nEOT\r\n}\r\n\r\n# https://www.vaultproject.io/docs/auth/jwt\r\nresource "vault_jwt_auth_backend" "github-oidc-provider" {\r\n  description        = "Configuration for GitHub as OIDC provider"\r\n  path               = "github"\r\n  type               = "oidc"\r\n  # https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-hashicorp-vault\r\n  oidc_discovery_url = "https://token.actions.githubusercontent.com"\r\n  oidc_client_id     = var.oidc_client_id\r\n  oidc_client_secret = var.oidc_client_secret\r\n  default_role       = "default"\r\n  bound_issuer       = "https://token.actions.githubusercontent.com"\r\n  tune {\r\n    listing_visibility = "unauth"\r\n  }\r\n}\r\n\r\nresource "vault_jwt_auth_backend_role" "default" {\r\n\r\n  backend        = vault_jwt_auth_backend.github-oidc-provider.path\r\n  role_name      = "default"\r\n  token_policies = ["default"]\r\n  oidc_scopes    = ["groups"]\r\n\r\n  user_claim            = "email"\r\n  groups_claim          = "groups"\r\n  role_type             = "oidc"\r\n  allowed_redirect_uris = [\r\n    "${var.vault_address}/ui/vault/auth/${vault_jwt_auth_backend.github-oidc-provider.path}/oidc/callback",\r\n    "http://localhost:8200/ui/vault/auth/oidc/oidc/callback"\r\n  ]\r\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"variables.tf"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'variable "vault_address" {\r\n  description = "URL of the vault instance to configure"\r\n  type        = string\r\n  default     = "https://vault.vault.catena-x.net"\r\n}\r\n\r\nvariable login_approle_role_id {\r\n  description = "The role_id of the approle, terraform uses to authenticate in vault"\r\n  type        = string\r\n}\r\n\r\nvariable login_approle_secret_id {\r\n  description = "The secret_id of the approle, terraform uses to authenticate in vault"\r\n  type        = string\r\n}\r\n\r\nvariable "oidc_client_id" {\r\n  description = "The client ID used for GitHub OIDC"\r\n  type        = string\r\n}\r\n\r\nvariable "oidc_client_secret" {\r\n  description = "The client secret used for GitHub OIDC"\r\n  type        = string\r\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Plan and apply with Terraform"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"cd k8s-cluster-stack/terraform/02_vault\r\nterraform init\r\nterraform plan -var='login_approle_role_id=${APPROLE_ID}' -var='login_approle_secret_id=${APPROLE_SECRET_ID}' -out .terraform/vault.tfplan\r\nterraform apply \".terraform/vault.tfplan\"\n"})})]})}function d(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>s});var t=r(7294);const a={},i=t.createContext(a);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);
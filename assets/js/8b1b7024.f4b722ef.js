"use strict";(self.webpackChunkcatenax_ng=self.webpackChunkcatenax_ng||[]).push([[5268],{957:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=t(5893),a=t(1151);const i={title:"How to setup and AKS cluster via terraform"},o=void 0,s={id:"internal/how-to-setup-aks-cluster-via-terraform",title:"How to setup and AKS cluster via terraform",description:"This guide is only for those who operate the environment",source:"@site/docs/internal/how-to-setup-aks-cluster-via-terraform.md",sourceDirName:"internal",slug:"/internal/how-to-setup-aks-cluster-via-terraform",permalink:"/docs/internal/how-to-setup-aks-cluster-via-terraform",draft:!1,unlisted:!1,editUrl:"https://github.com/catenax-ng/catenax-ng.github.io/edit/main/docs/internal/how-to-setup-aks-cluster-via-terraform.md",tags:[],version:"current",frontMatter:{title:"How to setup and AKS cluster via terraform"},sidebar:"tutorialSidebar",previous:{title:"How to onboard teams to sonarcloud",permalink:"/docs/how-to-onboard-teams-to-sonarcloud"},next:{title:"How to setup GitHub apps",permalink:"/docs/internal/how-to-setup-apps"}},l={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Terraform state",id:"terraform-state",level:2},{value:"Creating the AKS cluster",id:"creating-the-aks-cluster",level:2},{value:"Removing existing terraform config",id:"removing-existing-terraform-config",level:3},{value:"Initialize terraform",id:"initialize-terraform",level:3},{value:"Creating and applying the terraform plan",id:"creating-and-applying-the-terraform-plan",level:3},{value:"Verifying the AKS resources are created",id:"verifying-the-aks-resources-are-created",level:2}];function h(e){const r={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsx)(r.p,{children:"This guide is only for those who operate the environment"})}),"\n",(0,n.jsxs)(r.p,{children:["This how-to will guide you through the setup of a new AKS cluster via terraform. It is based on the terraform scripts in\nour ",(0,n.jsx)(r.a,{href:"https://github.com/catenax-ng/k8s-cluster-stack",children:"k8s-cluster-stack"})," repository."]}),"\n",(0,n.jsx)(r.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,n.jsxs)(r.p,{children:["Terraform is run by CLI on your local machine. We are not using any Pipelines for that. Therefor you need to install the\nterraform CLI for your operating system either by package manager for your OS, or by downloadable installer\nfrom ",(0,n.jsx)(r.a,{href:"https://www.terraform.io/downloads",children:"https://www.terraform.io/downloads"}),". You can verify your installation by\nrunning a command like ",(0,n.jsx)(r.code,{children:"terraform --version"})," from your terminal."]}),"\n",(0,n.jsx)(r.p,{children:"We assign service principals to our AKS clusters, that we can later use as technical user for the connection from our\ncore ArgoCD instance. If you do not already have a service principal, that you want to use, you can create one with the\nfollowing commands:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-shell",children:"# Logging in with your personal Azure account\naz login --tenant catenax.onmicrosoft.com\n# Creating a service principal, without assigning it to any resources/roles yet.\naz ad sp create-for-rbac --skip-assignment\n"})}),"\n",(0,n.jsx)(r.p,{children:"You'll need the 'client id' and 'secret id' values later on."}),"\n",(0,n.jsx)(r.h2,{id:"terraform-state",children:"Terraform state"}),"\n",(0,n.jsxs)(r.p,{children:["Terraform uses ",(0,n.jsx)(r.a,{href:"https://www.terraform.io/language/state",children:"'state'"})," to track status and differences of your real world\nresources and your configuration. While being very useful in most situation, we actively decided to NOT manage/save the\nterraform state to track our AKS cluster resources. We think, that sharing and storing the state file is to much of an\neffort."]}),"\n",(0,n.jsx)(r.p,{children:"In our case of demonstration environments the impact of recreating the cluster from scratch and deploying all the tools\nand apps is not too high."}),"\n",(0,n.jsx)(r.h2,{id:"creating-the-aks-cluster",children:"Creating the AKS cluster"}),"\n",(0,n.jsx)(r.p,{children:"The following steps show you how to..."}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"initialize terraform"}),"\n",(0,n.jsx)(r.li,{children:"create a terrform plan"}),"\n",(0,n.jsx)(r.li,{children:"apply that plan to your Azure subscription"}),"\n"]}),"\n",(0,n.jsxs)(r.p,{children:["It is assumed, that before running any terraform commands, you cloned\nthe ",(0,n.jsx)(r.a,{href:"https://github.com/catenax-ng/k8s-cluster-stack",children:"k8s-cluster-stack"}),"\nrepository. You should then open a terminal session and navigate to the repository path."]}),"\n",(0,n.jsxs)(r.p,{children:["For the following instructions it is also assumed, that you already navigated to the AKS related terraform directory,\nwhich is at ",(0,n.jsx)(r.code,{children:"/terraform/01_core_cluster/"})," in the repository."]}),"\n",(0,n.jsx)(r.h3,{id:"removing-existing-terraform-config",children:"Removing existing terraform config"}),"\n",(0,n.jsx)(r.p,{children:"We always run the AKS cluster creation from a clean working directory. So in case you did run any terraform commands\nbefore, there are some files, that could disturb the clean run. To get rid of these files remove state files, plans and\nthe .terraform directory"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-shell",children:"rm *.tfstate*\nrm *.tfplan\nrm -rf .terraform\n"})}),"\n",(0,n.jsx)(r.h3,{id:"initialize-terraform",children:"Initialize terraform"}),"\n",(0,n.jsxs)(r.p,{children:["Before you can create or apply a terraform plan, you have to ",(0,n.jsx)(r.a,{href:"https://www.terraform.io/cli/commands/init",children:"initialize"}),"\nthe terraform working directory by running ",(0,n.jsx)(r.code,{children:"terraform init"}),"."]}),"\n",(0,n.jsx)(r.p,{children:"This will initialize the necessary modules and download plugins for the used providers."}),"\n",(0,n.jsx)(r.h3,{id:"creating-and-applying-the-terraform-plan",children:"Creating and applying the terraform plan"}),"\n",(0,n.jsxs)(r.p,{children:["A terrform ",(0,n.jsx)(r.a,{href:"https://www.terraform.io/cli/commands/plan",children:"plan"})," is an execution plan that will give you a preview about\nthe changes to your infrastructure. As input for the plan, you'll need to specify a set of variable values. Most of the\nvariables are already set with sane defaults. A mandatory variable, that you need to specify is ",(0,n.jsx)(r.code,{children:"environment_name"}),". To\nset this variable, create a file named after the environment you want to create with the ending '.tfvars' in the\n'01_core_cluster/environments/' directory. The value is specified as key-value-pair. Another useful variable that you\ncan set is ",(0,n.jsx)(r.code,{children:"k8s_vm_size"}),", which will specify the Azure specific VM type, that is used for the k8s nodes."]}),"\n",(0,n.jsx)(r.p,{children:"An example tfvars file could look like the following:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-hcl",children:'# Example terraform AKS environment variable specification\n# /terraform/01_core_cluster/core.tfvars\nenvironment_name = "core"\nk8s_vm_size      = "Standard_D8s_v4"\n'})}),"\n",(0,n.jsxs)(r.p,{children:["Beside these variables, that you can safely commit to the repository, you also need to specify the client id and client\nsecret of the service principal, that should be assigned to the cluster. For this kind of variables, terraform provides\na way to set specific environment variables, that have to be of the form\n",(0,n.jsx)(r.code,{children:"TF_VAR_<variable-name>"}),". You can set the service principal config like follows:"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-shell",children:"export TF_VAR_service_principal_client_id=<sp client id>\nexport TF_VAR_service_principal_client_secret=<sp client secret>\n"})}),"\n",(0,n.jsx)(r.p,{children:"With the variables specified in your tfvars and the service principal config set via environment variable, you can\ncreate the plan and apply it to Azure with the following command:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-shell",children:"# replace <environment> with the actual name of the environment you chose\nterraform plan -var-file=environments/<environment>.tfvars -out <environment>.plan\nterraform apply <environment>.plan\n"})}),"\n",(0,n.jsx)(r.h2,{id:"verifying-the-aks-resources-are-created",children:"Verifying the AKS resources are created"}),"\n",(0,n.jsxs)(r.p,{children:["If you successfully applied the terraform plan, you will find a resource group with the naming pattern ",(0,n.jsx)(r.code,{children:"cx-<envname>-rg"}),"\nin your subscription in the ",(0,n.jsx)(r.a,{href:"https://portal.azure.com/",children:"Azure portal"}),". Part of that resource group will be your newly\ncreated AKS cluster."]}),"\n",(0,n.jsxs)(r.p,{children:["You will also find a public IP with the naming pattern ",(0,n.jsx)(r.code,{children:"cx-<envname>-public-ip"})," in a slightly different resource group,\nthat Azure created automatically for the kubernetes nodes pool."]})]})}function d(e={}){const{wrapper:r}={...(0,a.a)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},1151:(e,r,t)=>{t.d(r,{Z:()=>s,a:()=>o});var n=t(7294);const a={},i=n.createContext(a);function o(e){const r=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(i.Provider,{value:r},e.children)}}}]);
"use strict";(self.webpackChunkcatenax_ng=self.webpackChunkcatenax_ng||[]).push([[8588],{3767:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var r=t(5893),s=t(1151);const o={title:"How to expose your app to the internet"},i=void 0,a={id:"guides/kubernetes/how-to-expose-an-app-to-the-internet",title:"How to expose your app to the internet",description:"By default, the pods you create in a kubernetes cluster are not exposed to the outside of the cluster. If you want to",source:"@site/docs/guides/kubernetes/how-to-expose-an-app-to-the-internet.md",sourceDirName:"guides/kubernetes",slug:"/guides/kubernetes/how-to-expose-an-app-to-the-internet",permalink:"/docs/guides/kubernetes/how-to-expose-an-app-to-the-internet",draft:!1,unlisted:!1,editUrl:"https://github.com/catenax-ng/catenax-ng.github.io/edit/main/docs/guides/kubernetes/how-to-expose-an-app-to-the-internet.md",tags:[],version:"current",frontMatter:{title:"How to expose your app to the internet"},sidebar:"tutorialSidebar",previous:{title:"How to release a Helm chart",permalink:"/docs/guides/Helm/how-to-release-a-helm-chart"},next:{title:"How To Monitor CPU And Memory Usage",permalink:"/docs/guides/kubernetes/how-to-monitor"}},c={},l=[{value:"Catena-X kubernetes cluster setup",id:"catena-x-kubernetes-cluster-setup",level:2},{value:"Defining your ingress definition (with helm)",id:"defining-your-ingress-definition-with-helm",level:2}];function u(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["By default, the pods you create in a kubernetes cluster are not exposed to the outside of the cluster. If you want to\r\nmake your application accessible through the internet, you can specify\r\nan ",(0,r.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/services-networking/ingress/",children:"ingress definition"}),". Ingress definitions that are\r\napplied to a kubernetes cluster, are picked up by\r\nan ",(0,r.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/",children:"ingress controller"}),", which will route\r\ntraffic from the entrypoint to your services and/or pods. The ingress controller usually only exists once on a cluster\r\nand can manage multiple ingress definitions provided by you."]}),"\n",(0,r.jsx)(n.h2,{id:"catena-x-kubernetes-cluster-setup",children:"Catena-X kubernetes cluster setup"}),"\n",(0,r.jsxs)(n.p,{children:["All the kubernetes clusters provided as demonstration environments at Catena-X already come\r\nwith ",(0,r.jsx)(n.a,{href:"https://kubernetes.github.io/ingress-nginx/",children:"ingress-nginx"}),"\r\nas ingress controller installed."]}),"\n",(0,r.jsxs)(n.p,{children:["For proper TLS setup, ",(0,r.jsx)(n.a,{href:"https://cert-manager.io/docs/",children:"cert-manager"})," is used to provide your application with\r\ncertificates issued by ",(0,r.jsx)(n.a,{href:"https://letsencrypt.org/",children:"Let's Encrypt"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"defining-your-ingress-definition-with-helm",children:"Defining your ingress definition (with helm)"}),"\n",(0,r.jsx)(n.p,{children:"Typically, you would add the ingress definition for your app to your helm chart. The following example can be used as a\r\ntemplate:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'{{- if .Values.ingress.enabled -}}\r\napiVersion: networking.k8s.io/v1\r\nkind: Ingress\r\nmetadata:\r\n  # name of the ingress resource. -ingress suffix as suggestion for clear naming convention\r\n  name: {{ .Values.appName }}-ingress\r\n  annotations:\r\n    kubernetes.io/ingress.class: nginx\r\n    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"\r\n    nginx.ingress.kubernetes.io/ssl-passthrough: "true"\r\n    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"\r\nspec:\r\n  rules:\r\n    # IMPORTANT: specifies the entrypoint (domain), myApp will be accessible from\r\n    - host: {{ .Values.appName }}.{{ .Values.environment }}.demo.catena-x.net\r\n      http:\r\n        paths:\r\n          # specific path the app should be reachable on the host\r\n          # complete URL for the app consists of host AND path\r\n          - path: /\r\n            pathType: Prefix\r\n            backend:\r\n              service:\r\n                # Name of the service, the ingress controller should route the traffic to, if the host/path combination is called\r\n                # Adjust that to your service name\r\n                name: my-k8s-service\r\n                port:\r\n                  # Port number, the kubernetes service is listening on\r\n                  # Adjust that to your services\' port\r\n                  number: 8080\r\n\r\n  # Config for creating proper TLS certificates host has to match the one from the ingress rule\r\n  tls:\r\n    - hosts:\r\n        - {{ .Values.appName }}.{{ .Values.environment }}.demo.catena-x.net\r\n      # Default secret for certificate creation already provided to your namespace\r\n      secretName: tls-secret\r\n{{- end }}\n'})}),"\n",(0,r.jsx)(n.p,{children:"A values.yaml used for this template could look like the following:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'appName: "my-app"\r\nenvironment: "dev"\r\n\r\ningress:\r\n  enabled: true\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>i});var r=t(7294);const s={},o=r.createContext(s);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkcatenax_ng=self.webpackChunkcatenax_ng||[]).push([[4580],{9751:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=t(5893),a=t(1151);const o={title:"How To Onboard Product-Teams To Any Environment",slug:"/how-to-onboard-teams-to-any-environment"},s=void 0,i={id:"internal/how-to-onboard-teams-to-any-environment",title:"How To Onboard Product-Teams To Any Environment",description:"This guide is only for those who operate the environment",source:"@site/docs/internal/how-to-onboard-teams-to-any-environment.md",sourceDirName:"internal",slug:"/how-to-onboard-teams-to-any-environment",permalink:"/docs/how-to-onboard-teams-to-any-environment",draft:!1,unlisted:!1,editUrl:"https://github.com/catenax-ng/catenax-ng.github.io/edit/main/docs/internal/how-to-onboard-teams-to-any-environment.md",tags:[],version:"current",frontMatter:{title:"How To Onboard Product-Teams To Any Environment",slug:"/how-to-onboard-teams-to-any-environment"},sidebar:"tutorialSidebar",previous:{title:"How To Use HashiCorp Vault",permalink:"/docs/guides/how-to-use-vault"},next:{title:"How to onboard teams to sonarcloud",permalink:"/docs/how-to-onboard-teams-to-sonarcloud"}},c={},l=[{value:"Basics",id:"basics",level:2},{value:"GitHub",id:"github",level:2},{value:"Invitation of a single user",id:"invitation-of-a-single-user",level:3},{value:"Creating a GitHub team via terraform",id:"creating-a-github-team-via-terraform",level:3},{value:"Creating a repository via terraform",id:"creating-a-repository-via-terraform",level:3},{value:"Assigning a team as contributor to a repository via terraform",id:"assigning-a-team-as-contributor-to-a-repository-via-terraform",level:3},{value:"Vault via terraform",id:"vault-via-terraform",level:2},{value:"Add the new team to the list of product teams",id:"add-the-new-team-to-the-list-of-product-teams",level:3},{value:"ArgoCD",id:"argocd",level:2},{value:"Create ArgoCD Project",id:"create-argocd-project",level:3},{value:"Create AVP Secret",id:"create-avp-secret",level:3},{value:"Prepare Deployment Of ArgoCD Project And AVP Secret",id:"prepare-deployment-of-argocd-project-and-avp-secret",level:3},{value:"Create Pull Request",id:"create-pull-request",level:3},{value:"Special Topics",id:"special-topics",level:2},{value:"Enable access to a private repository via deploy key",id:"enable-access-to-a-private-repository-via-deploy-key",level:3},{value:"Enable access to a private package (central pull secret)",id:"enable-access-to-a-private-package-central-pull-secret",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"This guide is only for those who operate the environment"})}),"\n",(0,r.jsx)(n.h2,{id:"basics",children:"Basics"}),"\n",(0,r.jsxs)(n.p,{children:["We handle all of our support requests as a Jira task. There are ",(0,r.jsx)(n.a,{href:"https://catenax-ng.github.io/docs/resources",children:"templates"}),"\r\npresent for well-known and recurring tasks and also a blank template.\r\nFor handling these support tasks, we follow our internal support workflow."]}),"\n",(0,r.jsxs)(n.p,{children:["Since we setup teams and repositories in our GitHub organization and manage secrets in Hashicorp Vault using only one\r\nscript, at first ",(0,r.jsx)(n.strong,{children:"terraform has to be initialized"})," as described in the\r\n",(0,r.jsx)(n.a,{href:"https://github.com/catenax-ng/k8s-cluster-stack/blob/main/terraform/100_team_onboarding/README.md",children:"README.md"})," file in the directory\r\n",(0,r.jsx)(n.a,{href:"https://github.com/catenax-ng/k8s-cluster-stack/tree/main/terraform/100_team_onboarding",children:"100_team_onboarding"}),".\r\nIt is assumed, that you already have installed the terraform CLI. Before you start, make sure you've cloned\r\nthe ",(0,r.jsx)(n.a,{href:"https://github.com/catenax-ng/k8s-cluster-stack",children:"k8s_cluster_stack"}),"\r\nrepository and navigated to ",(0,r.jsx)(n.code,{children:"/terraform/100_team_onboarding"})," inside that repository on your terminal.\r\nThe check of the changes with 'terraform plan' and creation with 'terraform apply' which can be done after every\r\nterraform change or only at the end of all necessary changes is also described in the\r\n",(0,r.jsx)(n.a,{href:"https://github.com/catenax-ng/k8s-cluster-stack/blob/main/terraform/100_team_onboarding/README.md",children:"README.md"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"For 'terraform apply' and 'terraform plan' command the following command line variables has to be set:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"# You can get a login token, by logging into the Vault web UI and using 'copy token' from the top right user menu\r\nexport VAULT_TOKEN=<your-vault-token-or-root-token>\r\n# The OIDC settings that needs to be specified is the client-id and the client-secret for DEX. You can find this\r\ninformation in our devsecops secret engine in vault at path `devsecops/clusters/vault/github-oauth`.\r\nexport TF_VAR_vault_oidc_client_id=<client-id-copied-from-vault>\r\nexport TF_VAR_vault_oidc_client_secret=<client-secret-copied-from-vault>\r\n# A Github personal access token has to be created.\r\nexport TF_VAR_github_token=<github-pat>\n"})}),"\n",(0,r.jsxs)(n.admonition,{title:"regarding terraform",type:"info",children:[(0,r.jsx)(n.p,{children:"Following steps have to be done in the given order, otherwise there could be problems with other developments done in\r\nparallel:"}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"create a new branch"}),"\n",(0,r.jsx)(n.li,{children:"make changes"}),"\n",(0,r.jsx)(n.li,{children:"do a terraform plan to check if the changes meet your expectations"}),"\n",(0,r.jsx)(n.li,{children:"create a PR and merge"}),"\n",(0,r.jsx)(n.li,{children:"do a terraform apply"}),"\n"]}),(0,r.jsx)(n.p,{children:"Only after the merge in Github and the terraform apply have been done, the terraform state is consistent.\r\nOtherwise changes which are applied in parallel by someone else might be deleted again"})]}),"\n",(0,r.jsx)(n.h2,{id:"github",children:"GitHub"}),"\n",(0,r.jsx)(n.p,{children:"The following section describes how to handle users, teams and repositories in our GitHub organisation"}),"\n",(0,r.jsx)(n.h3,{id:"invitation-of-a-single-user",children:"Invitation of a single user"}),"\n",(0,r.jsxs)(n.p,{children:['Interaction with most of our tooling and also access to repositories is granted to members of our GitHub organization\r\n"catenax-ng". So ',(0,r.jsx)(n.a,{href:"https://github.com/orgs/catenax-ng/people",children:"inviting"})," users to the organization is the starting point for every Catena-X member."]}),"\n",(0,r.jsx)(n.p,{children:"As initial information to onboard a user to the organization, we need:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The GitHub username (or email address) of the person to onboard"}),"\n",(0,r.jsx)(n.li,{children:"A person (i.e. the product PO) to vouch for the person being onboarded to actually be part of Catena-X"}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"Assigning a GitHub user to the several GitHub product teams should be done by the maintainers of the GitHub product teams. Only in rare cases,\r\nlike onboarding a new person and a new team in the same step, DevSecOps team should assign github users to github teams."})}),"\n",(0,r.jsx)(n.h3,{id:"creating-a-github-team-via-terraform",children:"Creating a GitHub team via terraform"}),"\n",(0,r.jsx)(n.p,{children:"Access to repositories is granted on a GitHub team level instead of individuals. Also RBAC definitions on Vault and\r\nArgoCD are based on GitHub team membership."}),"\n",(0,r.jsxs)(n.p,{children:["To create GitHub teams, we are using the terraform root module\r\n",(0,r.jsx)(n.a,{href:"https://github.com/catenax-ng/k8s-cluster-stack/tree/main/terraform/100_team_onboarding",children:"100_team_onboarding"}),".\r\nTo create a new GitHub team, edit ",(0,r.jsx)(n.code,{children:"main.tf"})," in the ",(0,r.jsx)(n.code,{children:"100_team_onboarding"})," directory and locate the variable ",(0,r.jsx)(n.code,{children:"github_teams"}),"\r\ninside ",(0,r.jsx)(n.code,{children:'module "github" { ... }'}),". This variable contains a map of all the teams in our GitHub organization with name and\r\ndescription properties."]}),"\n",(0,r.jsx)(n.p,{children:"All you need to do is to add a new entry to that map with the new team name and an optional description. Make sure, the\r\nkey you use for your new entry is unique. This key will also be used by terraform to create an entry in the state file."}),"\n",(0,r.jsx)(n.h3,{id:"creating-a-repository-via-terraform",children:"Creating a repository via terraform"}),"\n",(0,r.jsxs)(n.p,{children:["Git repositories are also managed by our terraform root module\r\n",(0,r.jsx)(n.a,{href:"https://github.com/catenax-ng/k8s-cluster-stack/tree/main/terraform/100_team_onboarding",children:"100_team_onboarding"}),". The\r\nprocess of creating a new repository is similar to creating a team. You need to edit the ",(0,r.jsx)(n.code,{children:"main.tf"})," file in the\r\n",(0,r.jsx)(n.code,{children:"100_team_onboarding"})," directory. Repositories are defined in the\r\n",(0,r.jsx)(n.code,{children:"github_repositories"})," variable inside ",(0,r.jsx)(n.code,{children:'module "github" { ... }'}),". This variable is a map containing all the repository\r\ninformation. To create a new one, add a new entry to the map."]}),"\n",(0,r.jsx)(n.p,{children:"Event though most of the repository settings are configurable, the following should be set in a default case."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'visibility : "public"'}),". Exception is only, if the teams did not yet clarify IP related questions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"pages : { enabled : false }"}),". If a team wants to use GitHub pages, you can set this to true. This is needed, if teams\r\nwant to release artifacts like helm charts."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"is_template : false"}),". We usually do not create new repositories as template"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"uses_template : false"}),". Currently, our repositories are set up blank and not based on a template"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"template : null"}),". Since we usually do not use a template, we do not specify one. In case we want to use a template,\r\nthis variable has to be defined as object of form ",(0,r.jsx)(n.code,{children:'{ owner : "github-org" repository : "repo-name" }'})]}),"\n"]}),"\n",(0,r.jsxs)(n.admonition,{type:"caution",children:[(0,r.jsx)(n.p,{children:"If the team requested k8s-helm-example repository to be used as a template, the following settings needs to be changed:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"uses_template : true"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:'template : { owner : "catenax-ng" repository : "k8s-helm-example" }'})}),"\n"]}),(0,r.jsx)(n.p,{children:"The newly created repository will be populated with files from the template, github pages will be enabled and github action for releasing helm charts to pages will be added."})]}),"\n",(0,r.jsx)(n.h3,{id:"assigning-a-team-as-contributor-to-a-repository-via-terraform",children:"Assigning a team as contributor to a repository via terraform"}),"\n",(0,r.jsxs)(n.p,{children:["Contribution access to a repository in our GitHub organization is granted on a team level. We do not\r\ngrant this kind of access to individuals.\r\nAccess is again managed by our terraform root module\r\n",(0,r.jsx)(n.a,{href:"https://github.com/catenax-ng/k8s-cluster-stack/tree/main/terraform/100_team_onboarding",children:"100_team_onboarding"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["To manage contribution access for a team on a repository, edit the ",(0,r.jsx)(n.code,{children:"main.tf"})," file in the ",(0,r.jsx)(n.code,{children:"100_team_onboarding"})," directory.\r\nThere, add a new map entry to the ",(0,r.jsx)(n.code,{children:"github_repositories_teams"})," variable inside ",(0,r.jsx)(n.code,{children:'module "github" { ... }'}),".\r\nAs convention, we decided to for the map key as a combination of repository and team (",(0,r.jsx)(n.code,{children:"<repository-name-team-name>"}),").\r\nThis is done, because we have cases of multiple teams contributing to a single repository. This is configured, by\r\nadding multiple entries to the ",(0,r.jsx)(n.code,{children:"github_repositories_teams"})," map, containing the same repository, but a different team\r\neach time."]}),"\n",(0,r.jsxs)(n.p,{children:["As default, we configure ",(0,r.jsx)(n.code,{children:"maintain"})," access on the product repositories for the teams, since all the administrative\r\ntasks are handled by the team managing the organization."]}),"\n",(0,r.jsx)(n.h2,{id:"vault-via-terraform",children:"Vault via terraform"}),"\n",(0,r.jsx)(n.p,{children:"To be able to manage secrets in Hashicorp Vault and use them via ArgoCD Vault Plugin (AVP), a team needs the following\r\nVault resources set up:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A ",(0,r.jsx)(n.em,{children:"secret engine"})]}),"\n",(0,r.jsxs)(n.li,{children:["A ",(0,r.jsx)(n.em,{children:"read-write policy"})," for the secret engine, used to manage secrets via web UI or CLI; Mapped to the GitHub team"]}),"\n",(0,r.jsxs)(n.li,{children:["An ",(0,r.jsx)(n.em,{children:"approle"}),", that is used as AVP credentials"]}),"\n",(0,r.jsxs)(n.li,{children:["A ",(0,r.jsx)(n.em,{children:"read-only policy"})," for the secret engine, used as AVP credentials; Mapped to the approle"]}),"\n",(0,r.jsxs)(n.li,{children:["Approle credentials (secret-id and role-id) available as ",(0,r.jsx)(n.em,{children:"avp-config in the devsecops"})," secret engine"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["All of these resources are created through terraform scripts. The scripts are part of the\r\n",(0,r.jsx)(n.a,{href:"https://github.com/catenax-ng/k8s-cluster-stack",children:"k8s_cluster_stack"})," repository."]}),"\n",(0,r.jsx)(n.h3,{id:"add-the-new-team-to-the-list-of-product-teams",children:"Add the new team to the list of product teams"}),"\n",(0,r.jsxs)(n.p,{children:["Onboarding a new team is also managed by our terraform root module\r\n",(0,r.jsx)(n.a,{href:"https://github.com/catenax-ng/k8s-cluster-stack/tree/main/terraform/100_team_onboarding",children:"100_team_onboarding"}),".\r\nYou need to edit ",(0,r.jsx)(n.code,{children:"main.tf"})," in the ",(0,r.jsx)(n.code,{children:"100_team_onboarding"})," directory and locate the variable ",(0,r.jsx)(n.code,{children:"product_teams"}),"\r\ninside ",(0,r.jsx)(n.code,{children:'module "vault" { ... }'}),". This variable contains a map of all the product teams. To create a new one, add a\r\nnew entry to the map."]}),"\n",(0,r.jsx)(n.h2,{id:"argocd",children:"ArgoCD"}),"\n",(0,r.jsxs)(n.p,{children:["To provide a product-team access to the Hotel Budapest infrastructure following onboarding steps must be performed (all\r\nsteps are related to repository ",(0,r.jsx)(n.a,{href:"https://github.com/catenax-ng/k8s-cluster-stack",children:"k8s_cluster_stack"}),"):"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"create ArgoCD project"}),"\n",(0,r.jsx)(n.li,{children:"create AVP secret"}),"\n",(0,r.jsx)(n.li,{children:"deploy ArgoCD project and AVP secret"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Create a new branch in ",(0,r.jsx)(n.a,{href:"https://github.com/catenax-ng/k8s-cluster-stack",children:"k8s_cluster_stack"})," repo for onboarding a new\r\nproduct-team to ArgoCD."]}),"\n",(0,r.jsx)(n.h3,{id:"create-argocd-project",children:"Create ArgoCD Project"}),"\n",(0,r.jsx)(n.p,{children:"Create a manifest for the new product-team to create:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"k8s namespace"}),"\n",(0,r.jsx)(n.li,{children:"ArgoCD project:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\r\nkind: Namespace\r\nmetadata:\r\n  name: product-productName\r\n---\r\napiVersion: argoproj.io/v1alpha1\r\nkind: AppProject\r\nmetadata:\r\n  name: product-productName\r\n  namespace: argocd\r\nspec:\r\n  description: Project for product-productName\r\n  sourceRepos:\r\n    - "*"\r\n  destinations:\r\n    - namespace: product-productName\r\n      server: https://kubernetes.default.svc\r\n  # Allow all namespaced-scoped resources to be created, except for ResourceQuota, LimitRange, NetworkPolicy\r\n  namespaceResourceBlacklist:\r\n    - group: ""\r\n      kind: ResourceQuota\r\n    - group: ""\r\n      kind: LimitRange\r\n    - group: ""\r\n      kind: NetworkPolicy\r\n  roles:\r\n    # A role which provides access to all applications in the project\r\n    - name: team-admin\r\n      description: All access to applications inside project-bpdm. Read only on project itself\r\n      policies:\r\n        - p, proj:project-productName:team-admin, applications, *, project-productName/*, allow\r\n      groups:\r\n        - catenax-ng:product-productName\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Store this manifest in ",(0,r.jsx)(n.a,{href:"https://github.com/catenax-ng/k8s-cluster-stack",children:"k8s-cluster-stack"})," repo in\r\npath ",(0,r.jsx)(n.code,{children:"environments/hotel-budapest/argo-projects/"})," and in every environment you need it. Default is\r\ndev and int (Hotel-Budapest)."]}),"\n",(0,r.jsx)(n.h3,{id:"create-avp-secret",children:"Create AVP Secret"}),"\n",(0,r.jsx)(n.p,{children:"To enable the product-team to use Vault with ArgoCD create a team specific AVP secret manifest:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\r\nkind: Secret\r\nmetadata:\r\n  annotations:\r\n    avp.kubernetes.io/path: "devsecops/data/avp-config/product-productName"\r\n  name: vault-secret\r\n  namespace: product-productName\r\ntype: Opaque\r\nstringData:\r\n  VAULT_ADDR: https://vault.demo.catena-x.net/\r\n  AVP_TYPE: vault\r\n  AVP_AUTH_TYPE: approle\r\n  AVP_ROLE_ID: <role_id>\r\n  AVP_SECRET_ID: <secret_id>\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Store this manifest in ",(0,r.jsx)(n.a,{href:"https://github.com/catenax-ng/k8s-cluster-stack",children:"k8s-cluster-stack"})," repo in\r\npath ",(0,r.jsx)(n.code,{children:"environments/hotel-budapest/avp-secrets/"})," and in every environment you need it. Default is\r\ndev and int (Hotel-Budapest)."]}),"\n",(0,r.jsxs)(n.p,{children:["The secret will be called ",(0,r.jsx)(n.em,{children:"vault-secret"})," and stored in k8s namespace related to product-team."]}),"\n",(0,r.jsx)(n.h3,{id:"prepare-deployment-of-argocd-project-and-avp-secret",children:"Prepare Deployment Of ArgoCD Project And AVP Secret"}),"\n",(0,r.jsxs)(n.p,{children:["To deploy k8s namespace, ArgoCD Project and the AVP secret to Hotel Budapest you'll have to add the two created manifest\r\nfiles to ",(0,r.jsx)(n.code,{children:"environments/hotel-budapest/kustomization.yaml"}),"\r\nin ",(0,r.jsx)(n.a,{href:"https://github.com/catenax-ng/k8s-cluster-stack",children:"k8s-cluster-stack"})," repo:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"apiVersion: kustomize.config.k8s.io/v1beta1\r\nkind: Kustomization\r\n\r\n#namespace: argocd\r\n\r\nresources:\r\n  [ ... ]\r\n  - argo-projects/product-productName.yaml\r\n  - avp-secrets/productName-vault-secret.yaml\r\n  [ ... ]\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Please add the new product-team in alphabetical order to the ",(0,r.jsx)(n.em,{children:"resources"})," section of file ",(0,r.jsx)(n.code,{children:"kustomization.yaml"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"create-pull-request",children:"Create Pull Request"}),"\n",(0,r.jsx)(n.p,{children:"After you have created the three files"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"environments/hotel-budapest/argo-projects/product-productName.yaml"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"environments/hotel-budapest/avp-config/productName-team-vault-secret.yaml"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"environments/hotel-budapest/kustomization.yaml"})}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["create a PR for your branch. After the PR has been approved and merged into main branch, the new team will be\r\nautomatically deployed to Hotel Budapest cluster (via ArgoCD application ",(0,r.jsx)(n.em,{children:"hotel-budapest-config"})," at ArgoCD ",(0,r.jsx)(n.em,{children:"CORE"}),"\r\ncluster)."]}),"\n",(0,r.jsx)(n.h2,{id:"special-topics",children:"Special Topics"}),"\n",(0,r.jsx)(n.h3,{id:"enable-access-to-a-private-repository-via-deploy-key",children:"Enable access to a private repository via deploy key"}),"\n",(0,r.jsx)(n.admonition,{title:"note",type:"info",children:(0,r.jsxs)(n.p,{children:["The project/product has to follow the steps which can be found\r\nhere: ",(0,r.jsx)(n.a,{href:"guides/how-to-prepare-a-private-repo",children:"How to prepare a private repo"}),"."]})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Go to ",(0,r.jsx)(n.code,{children:"catenax-ng\\k8s-cluster-stack\\environments\\hotel-budapest\\argo-repos"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Add a file named ",(0,r.jsx)(n.code,{children:"product-<productName>-repo.yaml"}),", e.g. for ",(0,r.jsx)(n.em,{children:"product-semantics"})," (",(0,r.jsx)(n.code,{children:"product-semantics-repo.yaml"}),"):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\r\nkind: Secret\r\nmetadata:\r\n  name: product-semantics-repo\r\n  namespace: argocd\r\n  annotations:\r\n    avp.kubernetes.io/path: "semantics/data/deploy-key"\r\n  labels:\r\n    argocd.argoproj.io/secret-type: repository\r\nstringData:\r\n  type: git\r\n  url: git@github.com:catenax-ng/product-semantics\r\n  name: product-semantics-repo\r\n  project: project-semantics\r\n  sshPrivateKey: |\r\n    <semantics-deploy-key>\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Add following line to ",(0,r.jsx)(n.code,{children:"environments/hotel-budapest/kustomization.yaml"})," and for every environment you need it.\r\nDefault is dev and int (Hotel-Budapest)."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"- argo-repos/product-semantics-repo.yaml\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"enable-access-to-a-private-package-central-pull-secret",children:"Enable access to a private package (central pull secret)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Create a PAT within GitHub user account (machine user)\r\nsettings - Developer settings - Personal access token. Be sure to give just the needed rights (read",":package"," will be\r\nsufficient to deploy)"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:'Now do a base64 encoding for the PAT $ echo -n "[USERNAME]:[PAT]" | base64'}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Create a file ",(0,r.jsx)(n.code,{children:".dockerconfigjson"})," containing the base-64 encoded PAT"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n  "auths": {\r\n    "ghcr.io": {\r\n      "auth": "<base-64 encoded PAT>"\r\n    }\r\n  }\r\n}\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Do a base 64 encoding for the auth part"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'echo -n\'{"auths":{"ghcr.io":{"auth":"<base-64 encoded PAT>"}}}\' | base64\n'})}),"\n",(0,r.jsx)(n.p,{children:"If the output is divided into 2 lines, just add the second line to the first (without space)"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Create a file ",(0,r.jsx)(n.code,{children:"dockerconfigjson.yaml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"kind: Secret\r\ntype: kubernetes.io/dockerconfigjson\r\napiVersion: v1\r\nmetadata:\r\n  name: budapest-machine-user-read-package\r\n  labels:\r\n    app: app-name\r\ndata:\r\n  .dockerconfigjson: <base64 encoded auth part, output from second base64 encoding>\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Then add the secret to the cluster"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"kubectl create -f dockerconfigjson.yaml\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Pull secret has to be added to the product\xb4s code"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"imagePullSecrets:\r\n  - name: <name of the pull secret>\n"})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>s});var r=t(7294);const a={},o=r.createContext(a);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);